Recoil 라이브러리 사용하고 있다 
=> 이유 : atom이라는 원자를 만들어서 모든 하위 컴포넌트 요소들이 데이터를 찾아가기 위해서
- selector 함수 : state값을 받아와서 해당 요소를 변환 후 반환하는 함수


*enum type : 열거할 수 있는 열거형 타입
enumberable : 열거할 수 있는
 =>어떤 순서를 갖고 있는 요소들의 타입을 정의!!
(기본 타입 계층구조에 Number enum)


*Recoil 
 >Recoil메인함수
  - useRecoilValue : atom 값을 가져올 때
  - useSetRecoilState : atome 값을 편집
  - useRecoilState : 갓ㅂ을 가져와서 편집

 > atom 값을 하위 컴포넌트 요소들이 사용!
    (*atom사용할때 반드시 매개변수로 객체를 사용 => key & default 필수값)
 > selector 함수 역시 사용!
    (*selector 역할 : atom에 저장되어있는 value값을 가져다가 변환.가고 => 반환)
    (*객체를 매개변수로 선언해야한다 => 해당 매개변수는 get함수를 가지고 있는 
       객체의 타입 => 객체 안에 담긴 get함수 : atom의 값을 반ㄴ환 할 수 있도록 
        해주는 역할! / 반드시 return문을 활용해서 반환값 필수)


*react-hook-form 라이브러리
 - form 태그 안에 input태그에 입력된 값을 라벨링을 해서 찾아오거나, 값이 변경되고 있는 
   사항을 실시간 모니터링, 유효성 검사를 위해서 에러가 발생되었을 때 해당 에러에 대응할
   수 있는 메세지도 정의, 폼 요소안에 이벤트 핸들러 정의 해서 사용할 수도 있다



왜하는지? 더 쉽게하는방법 있지않나? 굳이 이거해야되나?
=> 마인드가 학생이라 생각해서 나올수 있는 생각
  => 회사에서 하라하면.. 별수없다

현재 recoil은 가장 핫한 state 문법이다
react-hook-form도 비교적 최신 트랜디한 라이브러리 중 하나다

----------------------------------------------------------------------------------------

get : atom값을 찾아와서 어떤 연산작업 후 값을 반환!!!
set : state의 값을 특정 값으로 변경시켜주고자 할 때 사용한다!!! / 두번째 매개변수로 들어오는
  값이 신규 state값이다!!!
get 와 set 는 칸반보드 만드는데 중요한 역할을 할거다..


제이쿼리4가 기능이 많이 업데이트 됐다 
아마 올 하반기 취업시장에서 제이쿼리 4 요할것같다



drag & drop  드래그& 드롭 기능
npm beautiful dnd => dnd : drag & drop
https://www.npmjs.com/package/react-beautiful-dnd
https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/about/installation.md
=> npm install react-beautiful-dnd


가장 바깥영역은 반드시 <DragDropContext />가 있어야한다
   > DragDrop을 할 수 있는Context
실제 드래그가 가능하게 할 수 있도록 해주는 영역에 대한 설정 => <Droppable /> 이 한다
상기 <Droppable />이 있어야지만, <Draggable /> 이 가능하다

 1) <Droppable /> & <Draggable />
      : 반드시 본인들만의 고유한 ID값을 가지고 있어야한다

 2) <Droppable /> & <Draggable />
      : 자식요소 태그들은 함수의 반환값 형태가 되어야한다

 3) <Draggable />
      : id값 + index값도 필요하다!!

 4) <Draggable />이 드래그 종료가 되는 시점에 함수가 도출된다
      : 그 함수는 => onDragEnd라는 함수다
       => onDragEnd 함수 (*이동한 지점의 정보값을 알려주는 역할을 한다)

