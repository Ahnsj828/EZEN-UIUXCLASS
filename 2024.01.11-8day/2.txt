*tag (태그 = h1)
 - 홑태그(single tag) / 쌍태그(multi tag) 두 종류는 하다보면 안다
 - 

*property 속성 = id
*value 속성값 =header

 <h1 id="header">Hello World</h1>

*명시성 = 얼만큼 직관적으로 코드를 작성했는가

*Clean Code => html5로 된 clean code를 보면 html 코드를 보고있는데, 글을 읽고 있는 느낌이 든다 (*논리 정연하게 코드를 작성)

ctrl + shif + J  or F12 - 개발자 도구

주석은 소문자 대문자 상관없다
but, 태그들은 대문자 소문자 구분해야된다

------------------------------------------------------------

*반드시 꼭 필수적을 알아야하는 tag 
1) Text Tag = 5개 (5개가 핵심태그다)
 - h(n) : n운 숫자 = 1~6까지 들어갈 수있다 = 대표한는것
 - 어떤 문서를 작성할 때 대표 타이틀을 지칭하고자 할 때

   복사하려면- 원하는 문구 드래그하고 + alt shift 아래방향키

   달러는 미정

 - p : paragraph = 단락
    모든 기사들은 p가 있다
(*특별한 의미를 부여하지 않은 문자를 삽입하는 경우= 더미문자열 = dummy text - lorem)
 p Tqp -> <p></p>

 - br : break 단락을 쪼개고싶을때 , 남발하지마라
(*문자 단락 줄바꿈이 필요한 경우 사용)

 - hr : horizontal ruler
(*단락간 선을 긋고 구분을 지어주고 싶을 때 사용)

 - a : anchor
(*특정 텍스트 및 이미지를 클릭했을때, 해당 페이지로 이동하게 만들어주고 싶을 때 사용)
1) 첫번째 기능 : 외부페이지로 이동하고 싶은 경우
2) 두번째 기능 : 내부페이지에서 내부페이지로 이동하고 싶은 경우
 (*Top으로 이동 기능 구현)탑으로 이동

*landing page = 랜딩 페이지 (랜딩:도착) =도착해야하는 페이지
href 참조
  클릭하고 기존페이지 두고 신규페이지를 탭을 분리해서 새로 열고싶다 
a태그를 사용할 때, 특정 위치로 이동시키고 싶다면, 반드시 id값을 활용해야하는데, 그때 id값 앞에 붙이는 수식어 "#"
   # : id값 앞에 붙이는 수식어
*절대로 NEVer!! 하나의 프로젝트 안에서는 동일한 이름의 id 속성 값은 사용하지 않는다!! 절대로!!


주제 : 자유
상품 이거나 책이거나 기타거나
a, h, p, hr, br를 사용해서 페이지를 하나 만들어보기

b : bold =>텍스트를 두껍게 하고 싶을 때 사용하는 태그

mark => 특정 텍스트를 돋보이게 하기위한 태그(많이 안쓰임)

  alt - 대안 대안책 대안하다

---------------------------------------

2) List Tag (목록 tag 
ul : unoder list
ol : order list 단독으로 못씀
li : list
*order = 정렬된
  ul,li 많이쓰고 ol 쓰는거 못보심
  ul> ul 태그안에 자식요소로 쓰고싶다
*중첩된 목록태그 사용의 경우

--------------------------------------------

3)Table Tag(테이블태그)
table : 테이블 태그를 작성하기 위해서 가장 바깥 영역에 입력하는 태그 
tr : table row 약자 : 테이블의 행을 정의할 때 사용하는 태그( row=행)
th : table header 약자 : 각 행 혹은 각 열의 대표성을 띄고있는 셀을 지칭하고자 할 때 
td : table data 약자 : 각 행 혹은 각 열의 일반 보통의 셀을 지칭할 때
thead / tbody / tfoot : 각 table의 영역을 구분짓고 싶을때 사용하는 태그

caption : table 태그를 사용할 때, 해당 테이블의 제목을 입력하고자 할 때 사용(*수평정렬)
<피겨랑>
figure : figcaption 을 사용하기 위해서 사용하는 태그
figcaption : table 태그를 사용할 때, 테이블의 제목을 입력할 수 있음
colgroup : 열을 그룹핑하고자 할 때 사용하는 태그
col : 실제 colgroup 안에 있는 각각의 열을 지칭하고자 할 때
colspan : 열을 병합하고 싶을 때
rowspan : 행을 병합하고 싶을 때

*row : 행 / column : 열
*style 적용 우선순위
1. thead / tbody / tfoot
2. cogroup > col

   ctrl + / 주석처리
  <table border="1"> border 1은 두께 가장 얇은 두께

*HTML5 에 적용된 문법
(시멘틱 태그 = semantic tag = 의미를 부여하는 태그)
=> 사람인, 잡코리아 취업지원할때
=> html5 / 시멘틱 태그 준수한사람 - 남발하지않는사람 

나누는 이유 style 주고싶다 

인라인 스타일 시트 =>HTML 문서안에 직접 css 스타일 적용한것을 의미(*실무에서는 이렇게 작성 x)

내부 스타일 시트 주는 방법

*web 반응형 /
단위 : px / em / rem / 

span 영역

10행6열
캡션 중앙
콜그룹안에 콜이 몇개들어올거냐 

----------------------------------------------
4) 이미지 & 비디오 & 오디오 태그
   비디오나 오디오소스는 용량이 커서 사이트에 올리지 않는다
- img : src(랑 같이쓴다) 
> src : 이미지 경로를 가져오는 속성
> alt : 이미지에 대한 정보를 정의할 수 있는 속성
> width : 이미지의 너비(*가로) 길이를 조정할 수 있는 속성
> height :  이미지의 높이(*세로) 길이를 조정할 수 있는 속성
  w랑 h는 같이 안쓴다 / 사진이 찌그러진다

- img map(*지도)

- map라는 태그 : name이라는 속성의 값 = img usemap 속성 값

웹좌표계 vs 데카르타 좌표계
좌측상단이 (0,0)이다 (좌측상단이 이미지시작점 , 우측하단이 이미지 끝이다)



- audio :
> src : 오디오에대한 소스 경로를 가져오는 속성
> cotrols : 오디오 재생도구를 출력시켜주는 속성
> loop : 오디오 반복여부를 컨트롤해주는 속성
> autoplay : 오디오 자동재생을 컨트롤해주는 속성

- video :
> src : 비디오에대한 소스 경로를 가져오는 속성
> cotrols : 비디오 재생도구를 출력시켜주는 속성
> loop : 비디오 반복여부를 컨트롤해주는 속성
> autoplay : 비디오 자동재생을 컨트롤해주는 속성
> width / height 

*input 

git & git-hub
=> 어제, 오늘 작업한 데이터를 업로드
=> 자료를 참고해서 미션 해결



포폴에 내 깃 주소 적어놔야한다.
깃 사용 내용이 초록색으로 나온다.
초록색으로 안나온 날이 많으면 깃을 많이 사용 안한거다
잔디 심는다 = 매일 깃을한다
잔디를 심어놔야 면접관들이 깃을 많이 활용한거 보고
깃을 잘 다룰 줄 안다 생각한다
실무에서 깃을 잘 다뤄야 한다.

git : 관리해주는 프로그램
1) 현재 작업중이 데이터의 버전관리를 도와주는 프로그램
2) 내가 현재 작업하고 있는 컴퓨터 안에 설치를 하는 프로그램
3) 현재 로컬 컴퓨터에 설치된 작업관리 프로그램
다른사람한테 공유도 해줄 수있다
컴퓨터를 바꿔가면서 작업할 수도 있다.
깃을 설치해서 깃허브 클라우드에서 내 컴퓨터로 다운받을 수있다.
id분야 웹하드
깃에서 작업한거 보고 채용하는 경우가 많다.
그래서 다들 자기 깃을 꾸민다.


git-hub : 클라우드 공간으로 보내준다
1) 로컬 컴퓨터에서 작업한 데이터를 클라우드 공간으로 호스딩 하게 도와주는 장소

------------------------------------------------------------

<나의 로컬 컴퓨터에서 준비해야하는 1단계>
1.git을 사용하려면 반드시 설치해야하는 프로그램
-git bash

2.vs code > 터미널 (ctrl + ~) > git bash 모드 변경


<웹에서 git-hub 계정 생성>
1.구글 > 깃호브 검색 > 회원가입

2.깃허브에서 내가 데이터를 저장할 공간을 생성
(*공간 = 레파지토리 repository)
 수업용 레파지토리 / 포폴용 레파지토리 / 팀프로젝트 레파지토리
Repository : EZEN-UIUXCLASS
ID : Divjason(쌤꺼)
Email : 

------------------------------------------------------------

<나의 로컬 컴퓨터와 git과 git-hub를 연동>
1. 이미 공용컴퓨터에 누군가가 git을 사용했던 이력이 존재할 수있다. =>기존 세팅되어있던 git 정보를 reset하고 가자

2. 내컴퓨터 > 좌측 하단 검색도구 > git bash > 관리자 도구 실행
git config --system --unset credential.helper

3.vs code
> git bash > name & email 세팅
> git config --global user.name 내아이디적기(이메일말고)
 내아이디에 해야 내 잔디가 심어진다

> git config --global user.name 내이메일적기(ahnsj8282@gmail~)
> 내 git-hub 정보가 로컬컴퓨터에 정상적을 세팅되었는가를 확인하는 절차 : git config --list

4.내 컴퓨터에 git이라는 공간을 생성
> git init

5.나의 git과 나의 repository 주소를 연동한느 방법
> git remote add origin (내 repository 주소) 

6.지금까지 내가 작업해온 데이터를 git에 담는 방법
> git add . 

7.내 루트 폴더에 있는 데이터가 정상적으로 담겨있는지 확인하는 방법
> git status 

8.git hub에 업로드하고자 하는 나의 데이터에 라벨을 붙이는 작업
(*커핏 메세지를 작성)
> git commit -m "240111"     하면 왼쪽 녹색버튼 사라짐

9.웹 상에 있는 나의 git hub 레파지토리로 데이터를 커밋하는 방법 >git push origin master       허용하기 로그인하기 링크열기