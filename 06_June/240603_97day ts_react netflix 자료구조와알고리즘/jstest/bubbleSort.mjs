// // 버블정렬
// const arr = [4, 2, 3, 1];

// // 각각의 숫자는 총 3번의 비교가 필요하다! => 3번의 반복이 필요하다
// // i => 0, 1, 2 => 3번이 비교
// // 0번

// //  i => 0, 1, 2
// // i => 0 // j    =>    0, 1, 2 => 2314
// // i => 1 // j    =>    0, 1, 2 => 2134
// // i => 2 // j    =>    0 => 1234

// const bubbleSort = () => {
//   for (let i = 0; i < arr.length - 1; i++) {
//     // i < arr.length => i< 4  =>  3이어야하니까 -1   =>   i < arr.length - 1
//     for (let j = 0; j < arr.length - i - 1; j++) {
//       // 이중 for문
//       // 해당 선택 요소(i)를 제외한 만큼 반복해야하니까 -1  =>   j < arr.length - i - 1
//       if (arr[j] > arr[j + 1]) {
//         let temp = arr[j];
//         // 조건문안에 조건식 정의
//         arr[j] = arr[j + 1];
//         arr[j + 1] = temp; // 4와 2를 비교해서 4를 임시로 temp넣는다
//       }
//     }
//   }
// };
// console.log("=== 정렬 전 ===");
// console.log(arr); // [ 4, 2, 3, 1 ]
// bubbleSort(arr);
// console.log("=== 정렬 후 ===");
// console.log(arr); // [ 1, 2, 3, 4 ]

// ===============================================================================

// 등차수열
// 연속하는 두 항의 차이가 모두 일정하 수열
// 1, 3, 5, 7, 9
// [ 1, 2, 3, 4 ]  => 등차수열의 형식
// (n - 1) + (n - 2) + (n - 3) + (n - 4) + ... + 1
// 등차수열의 공식으로 표기하면👇🏼
// (n - 1)*1  + (n - 1) *2  +  (n - 1)*3  +  (n - 1)*4 + ... + 1
//    =>  {(n - 1) x n} / 2
//      =>  ( n제곱 - n )  / 2

// 빅오 & 빅오메가 & 빅세타
//  시간복잡도 => o(n2)
