1. Server 구축
    - listening
    - 페이지 라우팅
 use라는 매서드 함수

2. Client 개념
    - client는 sever한테 request

3. 글로벌 라우터, client 특정 request요청 => 출력시켜주는 요소 컨트롤러 (*특정 경로의 페이지에 도착했을 때, 실행시킬 콜백함수)


함수의 반환값을 쓸때 return과 { } 왜쓰는지
표현식문 실행문
실행문 => 값을 반환하지 않는다
return을 쓰면 실행문이 표현식문이 된다
js에서는 return을 써도 되고 안써도 된다
return문을 쓰고 싶으면  { } 쓰면된다

4. 사용자 || 제품 => 다양성 추구 => 무조건 동적 파라미터 경로
(*정적 파라미터 경로)
파라미터를 줄때 어떤 상황이냐에 따라 달라진다


*백엔드 : 가장 중요시 여기는게 보안이다! / 사용자 데이터 탈취 / 의도적으로 사이트가 잘 작동하지 못하도록 데이터 과부하 


pug!!! > 서버로서의 역할을 하고 있는 해당요소 express한테 pug 쓸거야라고 알려줘야한다

> View Engine 

*videoController.js > home을 현재 작업하고 있는 메인 루트 폴더를 인식한다
즉 pug파일이 src폴더 밖에 있다고 생각한다
 => pug파일을 views 폴더에서 빼야된다
이 에러를 해결하기 위해서 ...

분명히 루트폴더 안에 > src 안에 > views 폴더 존재 한다!!
그래서, 템플릿 엔진, pug express 설정!!
pug 파일을 활용!!! => 경로 불일치 났다

서버에 process.cwd( ) => 현재 실제로 작업중이라고 인식하고 있는 컴퓨터상의 루트폴더가 어디인지를 확인!!! => 현재 가장 바깥에 있는 폴더를 작업을 위한 실제 루트폴더 인식!!

view engine의 실제 속성을 세팅할 수 있는 => set( ) 함수를 썼었다
set(views, 경로!)
이게 된다는건 주저리 주저리 안써도된다는얘기다


1) pug를 통해서 반복적으로 복.붙해야하는 긴 html을 보다 효율적으로 줄인다!!
2) scss에서 변수 => include
3) patials => 공통적으로 사용될 html을 저장시키고 => 필요 시, 불러올수 있다!!
4) 상속 