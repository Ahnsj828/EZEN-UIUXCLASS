<JS Process>

1. 변수

2. 자료형(태/식)

3. 자료형 변환 = 형변환 (자료형에 대한 변환)
  - 문자 => 숫자로 변환 - 쌤은 Number( )를 쓰신다(가장 강력한상위개념이라)
  - 숫자 => 문자로 변환 - 쌤은 String( )를 쓰신다(가장 강력한상위개념이라)
     Number, String 이 다른 개념들을 포괄해서
  - 문자 & 숫자 => 논리 Boolean ( )

4. 연산자
 - 산술연산자 : + - / *
 - 연결연산자
 - 할당연산자
 - 비교연산자
 - 논리연산자
(***삼항조건연산자) 항이 세개이인 조건인 연산자 - 너무 중요하다!!!

5. 제어문
 - 조건문
  > if문 - 만약에 ~라면 이거해줘
  > if...else문 (*else if문) - 이거아니면 이거?
  > switch문 -이중에서 골라
  
 - 반복문
  > for문 - ~하는 동안에
  > forEach문
  > for..in문 => 객체 전용
  > for...of문 => 배열전용
  > while문
  > do...while문
 (*break문 & continue문)


6. 함수 => 자바스크립트의 꽃 / 핵심요소다
 => 어떤 여러 "기능" 및 "명령"들을 하나로 묶어놓은 집합체 or 그룹
     ex. html에서 구현가능한 동영상을 찾아와라(명령)
         해당 동영상을 찾아와서 내가 원하는 사이즈로 화면에 구현시켜라(명령)
 => 굳이 개별 기능, 명령들을 따로따로 독립적으로 실행시키지 않아도 구현 가능!
 => 함수는 어떻게 생겼는가?
 - 클래스 / 익명 / 화살표
 - 매개변수 & 인수(*인자값)
 - return (*함수 결과값 반환)
 - 스코프 (*블록 / 지역 / 전역)
 - var 쓰지마라 / 지역스코프 변수 / const (*권장)
 - 즉시실행함수
 - 변수선언 키워드 입력 => 전역변수
 - hoisting (*클래스함수 VS 익명함수 & 화살표)
 - JS를 1급 시민이라고 한다
 - 전개연산자 구문
 - 나머지 매개변수
 - 시간관련 내장함수
(* setInterval / clearInterval / setTimeout)
 - 재귀함수 

------------------------------------------------------------------------

7. DOM
 ( DOM은 일종의 시스템이다 / DOM하겠다 = 시스템을 이해하겠다 )
 ( Document Object Model )
 (    문서        객체   모델 )
 (  Object = 프로그래밍의 모든 전 과정 및 절차를 => 객체화 한다 )
 (  자바스크립트 =  객체지향 언어 )
 - querySelector / getElement
 - innerText / innerHTML / textContent
 - "on" 이벤트 핸들러
 - classLish
 - add( ) 클래스 값을 확인하고 추가할때 <-> remove 클래스 값을 확인하고 제거할때 / toggle( )
 - contains ( )
 - form
 - dom 선택자를 통해서 값을 찾아오는 방법 => value를 활용해서
   > #, ., tag 속성을 통해서 찾아올수있다
   > name이라는 속성을 통해서도 찾아올수있다
   > form 배열 요소

======================================================

* JS 상위레벨 (JS얇은책에서는 안나오는 얘기들이다)
 - 명령형 프로그래밍 JS코드 작성 => 현재 우리가 하고 있는거 
     => 이렇게 하는사람을 코더라고 부른다
     지향하는 방식은 아니다 / 보편화된 방식이다
     이건 chat gpt가 대체할 수 있다

 - 선언형 프로그래밍 JS코드 작성
     추세 / 트랜드
     이건 ai가 대체하기가 쉽지않다

 - 실행문 / 표현식문

 - 입문 단계

변수 => 자료형
숫자형, 문자열, 논리형, 심블, 객체, 배열, 함수, BigInt(숫자형의 하위개념)

자료형 크게 두개로 나눌수 있다
1. 원시타입 자료형 = primitive type 의 자료다 라고 부른다
   - 숫자형, 문자열, 논리형, BigInt(숫자형의 하위개념)
2. 참조타입 자료형 = reference type 의 자료다 라고 부른다
   - 심블, 객체, 배열, 함수


---------------------------------------------------------------------

