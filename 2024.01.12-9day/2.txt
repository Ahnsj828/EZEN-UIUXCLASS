html5 문법 : 
-의미를 부여한 div태그를 만들어주면 어떨까?
-semantic tag : 의미론적인

``div 뒤에 다 id가 있다 
``div id ="header"  이건 header dive야
``div가 번거롭다 -> 그래서 나온게 semantic tag
``<div id="footer"> 대신 <footer>랑 </footer> 써도 된다  - 이게 semantic

구글폰트에서
링크 복사 - html파일에 붙여넣기
패밀리복사 -css파일에 붙여넣기
실무에서 이렇게 안함
헤드가 원래는 길게 나와서 폰트까지하면 더 길어져서 안함


만들때 그룹으로 보기

 <body>
    <header></header>
  </body>  시멘틱방법

버튼안에 입력되어있는 텍스트 =>컨텐츠
이 컨텐츠를 감싸고 있는 테두리 => 보더(border)
컨텐츠와 보더 사이의 간격을 넓히려면, 패딩(pading)

``해더와 푸터가 한 몸이 되서 가운데 오게하고싶다 -> wrapper해준다

웹브라우저가 css는 순서대로 읽는다
먼저 입력한 순서대로 적용된다 - 그래서 가장 마지막에 적힌게 최종
 
그래서 태그값에 id를 넣어준다


*CSS : 스타일을 적용하는데 있어서 공통적인 형태를 띄고 있다
-html에서 스타일을 적용하고자 하는 특정 요소를 선택 및 불러와서 해당 요소에 스타이릉ㄹ 정의한다
-html에서 찾아서 불러온 태그를 => 선택자(*selector) 라고 부른다
-css에서는 선택자엑 어떤 스타일을 부여하고자 한다면, 반드시 중괄호를 입력한다
  -> 선택자 { 스타일 속성명 : 속성값 }
  body {
  font-family: "Nanum Pen Script", cursive;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;

*h1는 기본적으로 32px이다
*html에서 기본적으로 텍스트를 작성했을 때, 폰트 사이즈는 16px

*포트폴리오 홈페이지를 작업할때
> 단골질문 - 마진,패딩 다 안줬는데 레이아웃이 안맞는 이유는 뭔가요?
> html이 기본적으로 주는 마진존재 / h태그를 포함한 거의 대부분의 태그 본연의 margin/padding

css를 학습할 때, 가장 중요한 요소는 -> 선택자
- 선택자 종류가 굉장히 다양하다 (외우지마라 자주사용하다보면 익히게된다)

 1) 전체선택자 :
- * / css 스타일을 적용하기에 앞서서 reset하고자 할 때

 2) 태그선택자
- html에서 작성한 tag를 직접 불러와서 스타일 적용하고자 할때

 3) 아이디선택자 = html에서 id 속성값을 사용하고 있는 태그를 선택해서 불러오고자 할 때
    => 반드시 -> #아이디속성값  <-이렇게 해야한다
 (id는 특정을 값을 지정해주고 싶을때? id는 레어템) 단독의 유일한 값을 보유하고 있는 요소에 스타일을 적용하고자 할 때 주로 사용한다(*주의사앟 :  동일한 아이디 속성값이 존재해서는 안된다)

 4) 클래스선택자 = html에서 class속성값을 사용하고 있는 태그를 불러오고자 할 때 
   => 반드시 .(온점)클래스속성값
  동일한 스타일을 복수의 태그 및 요소에 적용하고자 할 때
 
 5) 후손선택자
 6) 자손선택자
 7) 속성선택자
 8) 동위선택자
 9) 구조선택자
 10) 반응선택자
 11) 상태선택자
 12) 링크선택자
 13) 문자선택자
 14) 부정선택자



<<<<<<깃허브>>>>>
내가 지금 자리가 바뀌어서 다른 곳에서 git-hub에 데이터를 올려야 하는 상황이 발생한다면?
1)기존에 내가 git-hub에 올려놨던 데이터를 그대로 다 가지고 있는 상황이라면  
  ->   git push origin + master            강제로 덮어쓰기 / 가급적이면쓰지마라 / 어쩔수없을때써라

2)기존 데이터를 백업해 높은것이 없다면, 1번 하지마라. 기존에 git-hub에 올라가 있는 데이터를 먼저
다운받아야 한다.
모두 내려 받은 후에 그동안 사용했던 컴퓨터가 아닌 새로운 공간에서 다운을 받고자 하면, 에러메세지가 뜬다 (ex.학원에서만 올리다가 집에서 하려면 다운이 안된다. 왜냐 깃이랑 내 컴터랑 처음이라)
  최초에만
   git pull origin master --allow-unrelated-histories     <--   이걸 입력해야된다

 폴더를 만들기 우클릭 vs켜기 - 터미널열기 -  
   git init  치기
   git remote add origin https://github.com/Ahnsj828/EZEN-UIUXCLASS.git
   git pull origin master --allow-unrelated-histories
   

연결이 된상태라면
git pull origin master

------------------------------------------------
집에가서 할일
1.폴더를 생성
2. 해당 폴더를 root 폴더로 잡고 vs code를 연다
3.vs code > 터미너를 연다
4.터미널 > git bash를 선택한다
5.해당 폴더에 git을 초기화한다 (*최초에만)
- git init

6.최초에만 아래 명령어를 입력한다
git pull origin master --allow-unrelated-histories

---------이렇게 처음에만 해두면  그 다음부터는 아래 명령어를 입력한다
git pull origin master


단 예외가 있다!!
> 레파지토리안에 브랜치명이 master 가 아닌 main경우(처음에는 모두 마스터가 아닌 메인이였다)
> 내 로컬컴퓨터의 브랜치명도 main으로 바궈줘야한다
> git branch -m master main



모두가 마스터도 아니고 모두가 메인도 아니다
노에제도때 마스터라는 말들을 많이 써서
반대 시위가 열리고 해서 바꿨다 
그래서 랜덤이다 
마스터인사람 메인인사람 있다

개발자 채용 자격요건에 ' git에 대한 이해 및 소스 코드 관리 경험이 있으신분 '