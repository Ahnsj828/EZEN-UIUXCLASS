오늘 React App 프로젝트
 - OpenWeatherMap API 활용, 날씨 정보 UI 출력
 - Component들을 어떻게 분리하고 관리하는지 모르겠다 (*기준)
    => 일단, 1개의 단일 Component로 최대한 기능 구현을 해봐라
    => 스스로의 불편함과 비효울적인 무언가가 누에 보이기 시작할거다
    => 그때 Refactoring을 하면된다
    컴포넌트에는 정답이 없다! 프로그래밍영역에 정답이라는건 없다
    상대적 & 비교적 효율적이다! 라고는 말 할 수 있다
 - 리액트 훅 언제 사용하나?
    => 직접 본인이 혼자서 스스로 React 앱을 만들어 본적이 없으면 모른다
    스테이트 관리는 useState다 라고 백날 듣는것보단 해봐야 안다

컴포넌트가 마운팅 될때 사용되는 리액트 훅 => useEffect
useEffect : 외부의 API값을 가져올때 사용한다
의존성 배열을 넣거나 빈 배열을 넣어야한다
위치정보를 한번만 가져오면 되는 상황이라 의존성 배열을 넣지 않아도 된다


지금 작업하고 있는 react 컴포넌트는 node를 기반에서 작동 및 실행한다!!
node는 환경병수를 설정할 수 있다!
.env 파일을 만들고 환경변수를 넣으면된다

아무 문제 없이 환경변수 설정했음에도 불구하고 
401메세지가 나오고 있다 => react 껐다 켜라!!

작년까지만해도
react확장자가 js가 아니라 jsx였었다
똑같다 js를 권장

처음부터 기능 구현 몰두하지마라! => 큰 숲을 놓치게되다

*조건부렌더링 : 외부에서 data를 정상적으로 받아올 때와 그렇지 않을 때를 나눠서 
컴포넌트 화면 출력을상이하게 하고싶은 경우에 사용!!



react-bootstrap (리액트 부트스트랩)을 많이 사용한다
퍼블리셔 => react-bootstrap 사용하지마라
   => 직군자체가 세밀한 디테일 자체를 디자인해야되는 직군이다
프론트엔드 => react-bootstrap 사용해도된다
    => 프로그래머들은 기능을 다루는 직군이다



0. 컴포넌트가 처음 마운트되었을 때(탄생되었을 때), 현재 나의 위치에 따른 날씨 정보가 출력 되어야한다!
1. 도시이름을 클릭했을 때, weatherbox 컴포넌트의 날씨 정보가 변경(*업데이트)

=> 컴포넌트 안에 어떤 특정값이 이벤트로 인해서 변경이 되어야한다! = 업데이트 되어야한다!
=> useState를 사용해서 어떤 값을 변경해야한다!!

=> 그럼 useState 훅을 어디에서 관리를 해야할까?
(*가장 최상위 부모요소가 data를 관리해야한다)



버튼을 클릭했을때 위에 정보가 바껴야한다
*하단에 있는 도시명이 기입된 버튼을 클릭하게 된다면, 리액트는 사용자가 어떤 버튼을 누르게 되었는지를
1차적으로 인지 할 수 있다 => *상태가 변화 되었다 || 업데이트

인지하게 되었다면, 해당 도시명을 가지고, API 주소에 도시명을 적용해서 해당 도시에 적용되는 날씨정보를
가져와서 화면에 출력을 해주면 된다!!

컴포넌트의 상태 변화에 따른 어떤 명령문을 실행시키고 싶다면? => useEffect


---------------------------------------------------------------------------------

쇼핑몰 만들기 : 페이지 라우팅 기능!!

react-router-dom