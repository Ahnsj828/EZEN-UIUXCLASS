1. 행 = row = 가로

2. 열 = column = 세로

몇행과 몇 열을 만들지 박스구조를 머릿속에 그려둬라
처음 설계가 중요하다

grid /

* 사용하는 단어 비슷한게 많음!!!
 justify / align - content(그룹으로 지어서 움직이게하려고한다) , item
> 

* flex => 단일차원 행, 열 레이아웃

* grid => 다차원 행, 열 레이아웃

---

프론트앤드 영역은 계속 변화한다
새로 업그레이드 된 문법들이 있다

align || justify-self(독립적인 요소에 대한 정렬)


float VS flex & grid
-반응형 대응 할 수 있냐 없냐

grid-column / grid-row 를 따로 썼었다
같이 쓸 수 있다!!


< 두가지 방법이 있다 >
1) grid로 화면을 레이아웃을 정렬하고자 할 때, 현재 보이는 화면을 기준으로 행 & 열을 재정립해나가면서 최종적인 UI화면을 완성!!!

2) 미리 완성된 결과물을 미리 figma를 통해서 행과 열을 정의한 후 grid 문법을 사용하는것!!  - 실무에서 많이 쓰는 방법

-----------------------------------------------------
* 지금까지한 grid의 문법은 서막에 불과했다*
= > web Publisher로 괜찮은 곳에 취업하려면
 => 1) portfolio 홈페이지
 => 2) portfolio 작업
 - 수업시간 진행하고 있는 실전예제 30개 정도
(* 커스터마이징 / 메뉴 / 너비 / 푸터 / 기능 특징 구현)
 - flex만으로 완성된 웹페이지 (*메인) 1~2개
 - grid만으로 완성된 웹페이지 (*메인) 1~2개
------------------------------------------------------

< 순서 >
display : grid
grid-template-columns
grid-template-rows
grid-template-areas

