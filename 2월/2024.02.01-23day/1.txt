SCSS 
1. Nesting : 중첩기능
 - 동일한 부모 선택자를 반복적으로 사용하지 않을 수 있는 효율성!!

2. 부모요소를 찾아오는 방법 : &
 => 전,후 문자 선택자
 => CSS / SCSS

* html & css를 활용한 프로젝트를 작업!!
 > 박스구조화 / class값을 작명 => 사우이에서 하위로 내려오면서 유사한 패턴!

flex랑 grid랑 float랑 같이 써도된다!!
 => 혼용해서 사용해도 문제가 하나도 없는데, 실무에서는 이렇게 작성하는 경우가 거의 없다!! 같이쓸 필요성이 없다
 
*고급언어 / 상위문법의 공통점 : 디버깅 굉장히 수월하다!!
=> 버그가 발생하면 즉각적으로 알려준다!

*현대의 UI 스타일 => 컴포넌트 스타일 시스템 => 하나의 템플릿 양식 => 상황에 따라서 가져다가 사용 => 디자인의 효율성 / 일관성!!

*커리큘럼
html / css => float / flex / grid
scss(변수를 많이쓴다, 교집합같은 개념) => 프로그래밍 언어 형식!
변수!!! => 전역변수 (*지상파 방송 => 전국구 대상 방송) 
             지역변수 (*지역방송 => SBS / JTV) 범위가 정해져 있다
               SBS 광고를 받아서 하는 사기업 방송사

내가 만약 scss 프로젝트 스타일 적용하겠다 마음막었다면
처음부터끝까지 다 SCSS로쓰기!!
어떤건 CSS, 어떤건 SCSS로 하면 안된다!!
이렇게하면 100% 에러난다

JS: 연산자!!!
- 산술연산자 : + , - , * , / , % (피연산자간 나누기를 한 이우헤 나머지 값을 찾아 올때)
- 비교연산자 : A, B ( > , < , >= , <= , != , =)
- 논리연산자 : true, false

함수 :  어떤 구현하고자하는 기능들을 한데 모아놓은 집합소!!!
=> 함수 : 함수이름 ( )     =>    functionA( 매개'변수', 매개변수, 매개변수)
=> 기능을 실행

변수 / @mixin / @include / @extend
(꼭 @mixi 만들어놔야지만 쓸 수있는건 아니다)
scss 활용해서 어떤 값을 만들어 놓았는데,
map-get

JS 에 map, set 이라는 내장함수가 있다
 > 어디에 저장해놓고 필요할때 꺼내서 쓸 수 있다
 > SCSS 에서도 비슷하게 쓰인다

if : 만약에 ~하다면(*긍정의 의미) / else : 만약에 ~ 안한다면(*부정의 의미)
 > CSS에서는 조건문 사용하지 않는다
 > SCSS에서 조건문 값을 적용!!
 if ( 조건식이 ture 참인경우 ) {
 실행문
}
                => 조건문이 참일경우 실행문이 실행된다


scss - ui와 관련있다

____________하트만들기_____________________
1. div 로 사각형만들고
2. 전후문자선택자 = before/ after활용해서 => 각 원을 만들어서
위치를 이동시킨다
3. 하트문양으로 만든다
4. animation을 만든다  => keyframes를 활용해서 일정시간에 맞춰서 크기를 조정한다 => scale( )
